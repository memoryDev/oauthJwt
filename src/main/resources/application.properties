# 서버의 포트 설정
server.port=9000

# 네이버 OAuth2 클라이언트 설정
# 클라이언트 이름
spring.security.oauth2.client.registration.naver.client-name=naver
#네이버 애플리케이션 클라이언트 ID
spring.security.oauth2.client.registration.naver.client-id=[naver-client-id]
#네이버 애플리케이션 클라이언트 비밀번호
spring.security.oauth2.client.registration.naver.client-secret=[naver-client-secret]
# 네이버 인증 후 리다이렉션 URI
spring.security.oauth2.client.registration.naver.redirect-uri=http://localhost:9000/login/oauth2/code/naver
# 인증 그랜트 타입
spring.security.oauth2.client.registration.naver.authorization-grant-type=authorization_code
# 네이버에서 요청할 정보의 범위
spring.security.oauth2.client.registration.naver.scope=name,email

# 네이버 OAuth2 제공자 설정
# 네이버 인증 URI
spring.security.oauth2.client.provider.naver.authorization-uri=https://nid.naver.com/oauth2.0/authorize
# 네이버 토큰 요청 URI
spring.security.oauth2.client.provider.naver.token-uri=https://nid.naver.com/oauth2.0/token
# 네이버 사용자 정보 요청 URI
spring.security.oauth2.client.provider.naver.user-info-uri=https://openapi.naver.com/v1/nid/me
# 네이버 응답의 사용자 이름 속성
spring.security.oauth2.client.provider.naver.user-name-attribute=response

# 구글 OAuth2 클라이언트 설정
# 클라이언트 이름
spring.security.oauth2.client.registration.google.client-name=google
# 구글 애플리케이션 클라이언트 ID
spring.security.oauth2.client.registration.google.client-id=[google-client-id]
# 구글 애플리케이션 클라이언트 비밀번호
spring.security.oauth2.client.registration.google.client-secret=[naver-client-secret]
# 구글 인증 후 리다이렉션 URI
spring.security.oauth2.client.registration.google.redirect-uri=http://localhost:9000/login/oauth2/code/google
#인증 그랜드 타입
spring.security.oauth2.client.registration.google.authorization-grant-type=authorization_code
# 구글에서 요청할 정보
spring.security.oauth2.client.registration.google.scope=name,email

# 데이터베베이스 설정
spring.datasource.driver-class-name=org.mariadb.jdbc.Driver
spring.datasource.url=jdbc:mariadb://localhost:3306/oauth_jwt_test
spring.datasource.username=root
spring.datasource.password=root

# JPA 관련 설정
spring.jpa.hibernate.ddl-auto=create
spring.jpa.hibernate.naming.physical-strategy=org.hibernate.boot.model.naming.PhysicalNamingStrategyStandardImpl

# JWT 설정
spring.jwt.secret=4c3a76fbae2da488dc787aa7f3ad4a5f9115b66e25c2417b7ed1d2f82a4d742bc74694ebf0416bfbc3bcf4ca5aede5a29cdc6a0865384e21204817e607753efb






